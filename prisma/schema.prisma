generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Info..

model Account {
  id                 Int       @default(autoincrement()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           Int      @default(autoincrement()) @id
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            Int       @default(autoincrement()) @id
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@index([email], name: "email")

  @@map(name: "users")
}

model VerificationRequest {
  id         Int      @default(autoincrement()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

// End user info.

model Space {
  id       Int     @default(autoincrement()) @id
  label    String
  key      String  @unique
  color    String?
  image    Image?  @relation(fields: [imageId], references: [id])
  imageId  Int?
  active   Boolean
  members  String  @default("alex.finnarn@gmail.com") 

  @@map(name: "spaces")
}

model Image {
  id            Int     @default(autoincrement()) @id
  file_name     String
  public_id     String
  asset_id      String  @unique
  resource_type String
  src           String
  thumbnail     String
  format        String
  height        Int
  width         Int
  space         Space?
  post          Post?

  @@map(name: "images")
}

// Content types.

model Post {
  id        Int     @default(autoincrement()) @id
  type      Post_types
  title     String
  subtitle  String
  slug      String  @unique
  content   Component[]
  priority  Int
  campus    Campus_tag
  interest  Interest_tag
  main_image Image?  @relation(fields: [main_image_id], references: [id])
  main_image_id Int?
  related_stories Post[]
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?

  @@map(name: "posts")
}

enum Post_types {
  IR20_Story
  Fund
}

enum Campus_tag {
  Anschutz
  Boulder
  Denver 
  UCCS
}

enum Interest_tag {
  Research
  Society 
  Students
}

model Component {
  id        Int     @default(autoincrement()) @id
  label     String
  props     Json
  type      Component_types

  @@map(name: "components")
}

enum Component_types {
  Text
  Image
  Quote
}